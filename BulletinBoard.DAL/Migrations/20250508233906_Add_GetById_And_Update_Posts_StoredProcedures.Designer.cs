// <auto-generated />
using System;
using BulletinBoard.DAL.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BulletinBoard.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250508233906_Add_GetById_And_Update_Posts_StoredProcedures")]
    partial class Add_GetById_And_Update_Posts_StoredProcedures
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BulletinBoard.DAL.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SubcategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubcategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("BulletinBoard.DAL.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Home Appliances"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Computer Equipment"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Smartphones"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("BulletinBoard.DAL.Entities.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Refrigerators"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Washing Machines"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Water Heaters"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Name = "Ovens"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Hoods"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Name = "Microwave Ovens"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Name = "PCs"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Name = "Monitors"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Name = "Printers"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Name = "Scanners"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Name = "Android Smartphones"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            Name = "iOS/Apple Smartphones"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 4,
                            Name = "Footwear"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 4,
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 4,
                            Name = "Sports Equipment"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 4,
                            Name = "Toys"
                        });
                });

            modelBuilder.Entity("BulletinBoard.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BulletinBoard.DAL.Entities.Post", b =>
                {
                    b.HasOne("BulletinBoard.DAL.Entities.Subcategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BulletinBoard.DAL.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BulletinBoard.DAL.Entities.Subcategory", b =>
                {
                    b.HasOne("BulletinBoard.DAL.Entities.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BulletinBoard.DAL.Entities.Category", b =>
                {
                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("BulletinBoard.DAL.Entities.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
